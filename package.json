{
  "name": "advancedprofanityfilter",
  "version": "2.36.5",
  "description": "A browser extension to filter profanity from webpages.",
  "node": "^12.20.0 || ^14.13.1 || >=16.0.0",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/richardfrost/AdvancedProfanityFilter.git"
  },
  "keywords": [
    "Profanity",
    "Filter"
  ],
  "author": "Richard Frost",
  "license": "SEE LICENSE IN LICENSE",
  "bugs": {
    "url": "https://github.com/richardfrost/AdvancedProfanityFilter/issues"
  },
  "homepage": "https://github.com/richardfrost/AdvancedProfanityFilter#readme",
  "scripts": {
    "build:firefox": "node bin/prebuild.mjs --firefox && npm run build",
    "build:ios": "node bin/prebuild.mjs --ios && npm run build",
    "build:libs": "tsc -p ./src/script/lib/tsconfig.json",
    "build:safari": "node bin/prebuild.mjs --safari && npm run build",
    "build:static": "node bin/copy-static.mjs",
    "build:test-sm": "babel src/script --out-dir built --extensions \".ts,.tsx\" --source-maps inline",
    "build:test": "babel src/script --out-dir ./test/built --extensions \".ts,.tsx,.js\"",
    "build:mv2": "node bin/prebuild.mjs --manifestV2 && npm run build",
    "build:mv3": "node bin/prebuild.mjs --manifestV3 && npm run build",
    "build": "npm run build:static && webpack --config bin/webpack.config.js",
    "clean:dist": "node bin/clean.mjs --dist",
    "clean": "node bin/clean.mjs --all",
    "package:bookmarklet": "node bin/prebuild.mjs --release --bookmarklet && webpack --config bin/bookmarklet.webpack.config.js",
    "package:firefox": "node bin/prebuild.mjs --release --firefox && npm run release:build && npm run package",
    "package:mv2": "node bin/prebuild.mjs --release --manifestV2 && npm run release:build && npm run package",
    "package:mv3": "node bin/prebuild.mjs --release --manifestV3 && npm run release:build && npm run package",
    "package": "node bin/package-extension.mjs",
    "postbuild": "node bin/postbuild.mjs",
    "postrelease:all": "npm run update:bookmarklet && npm run build",
    "postrelease:build": "node bin/postbuild.mjs",
    "postrelease:firefox": "node bin/package-source.mjs",
    "prebuild": "node bin/prebuild.mjs",
    "prerelease:all": "npm run clean && npm run package:bookmarklet",
    "release:all": "npm run release:mv2 && npm run release:mv3 && npm run release:firefox",
    "release:build": "npm run build:static && webpack --config bin/webpack.config.js",
    "release:firefox": "npm run package:firefox",
    "release:ios": "npm run clean && node bin/prebuild.mjs --release --ios && npm run release:build",
    "release:safari": "npm run clean && node bin/prebuild.mjs --release --safari && npm run release:build",
    "release:mv2": "npm run package:mv2",
    "release:mv3": "npm run package:mv3",
    "release": "node bin/prebuild.mjs --release && npm run release:build && npm run package",
    "test:addon": "npm run package:firefox && npx addons-linter ./extension-firefox.zip",
    "test:all": "npm run test && npm run test:lint:tests",
    "test:cov": "npm run build:test && nyc --reporter=lcov --reporter=text node_modules/mocha/bin/_mocha",
    "test:debug": "npm run build:test && node --inspect-brk node_modules/mocha/bin/_mocha --reporter tap",
    "test:lint:all": "npm run test:lint && npm run test:lint:bin && npm run test:lint:tests",
    "test:lint:bin": "eslint \"bin/**/*.*js\"",
    "test:lint:nibble": "npx eslint-nibble \"src/**/*.ts\"",
    "test:lint:tests": "eslint \"test/**/*.spec.js\"",
    "test:lint": "eslint \"src/**/*.ts\"",
    "test:nocov": "npm run build:test && node_modules/mocha/bin/_mocha",
    "test:types": "tsc --noEmit",
    "test": "npm run test:lint && npm run test:types && npm run test:addon && npm run test:cov",
    "type-check:watch": "npm run type-check -- --watch",
    "update:bookmarklet": "node bin/update-bookmarklet.mjs",
    "update:deps": "npx npm-check-updates --concurrency 10 --timeout 600000 --upgrade",
    "update:help": "node bin/update-help.mjs",
    "watch": "node bin/watch.js"
  },
  "devDependencies": {
    "@babel/cli": "^7.18.10",
    "@babel/core": "^7.18.10",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-object-rest-spread": "^7.18.9",
    "@babel/polyfill": "^7.12.1",
    "@babel/preset-env": "^7.18.10",
    "@babel/preset-typescript": "^7.18.6",
    "@babel/register": "^7.18.9",
    "@types/chrome": "^0.0.193",
    "@typescript-eslint/eslint-plugin": "^5.33.0",
    "@typescript-eslint/parser": "^5.33.0",
    "addons-linter": "^5.14.0",
    "adm-zip": "^0.5.9",
    "babel-loader": "^8.2.5",
    "chai": "^4.3.6",
    "chokidar": "^3.5.3",
    "download": "^8.0.0",
    "eslint": "^8.22.0",
    "fs-extra": "^10.1.0",
    "marked": "^4.0.18",
    "mocha": "^10.0.0",
    "npm-check-updates": "^16.0.5",
    "nyc": "^15.1.0",
    "terser-webpack-plugin": "^5.3.4",
    "typescript": "^4.7.4",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0"
  },
  "babel": {
    "presets": [
      "@babel/typescript",
      [
        "@babel/preset-env",
        {
          "modules": "commonjs",
          "targets": {
            "node": "current"
          }
        }
      ]
    ],
    "plugins": [
      [
        "@babel/plugin-transform-typescript",
        {
          "allowDeclareFields": true
        }
      ],
      "@babel/proposal-class-properties",
      "@babel/proposal-object-rest-spread"
    ]
  },
  "eslintConfig": {
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": 6,
      "sourceType": "module",
      "ecmaFeatures": {}
    },
    "plugins": [
      "@typescript-eslint"
    ],
    "rules": {
      "array-bracket-spacing": [
        "warn",
        "never"
      ],
      "arrow-parens": [
        "warn",
        "always"
      ],
      "comma-spacing": "warn",
      "indent": [
        "warn",
        2,
        {
          "SwitchCase": 1
        }
      ],
      "keyword-spacing": "warn",
      "no-console": "warn",
      "no-control-regex": [
        "off"
      ],
      "no-prototype-builtins": "off",
      "no-shadow": "warn",
      "no-undef": [
        "off"
      ],
      "no-unused-vars": [
        "off"
      ],
      "no-useless-escape": [
        "off"
      ],
      "object-curly-spacing": [
        "warn",
        "always"
      ],
      "prefer-const": [
        "error",
        {
          "destructuring": "all"
        }
      ],
      "quotes": [
        "error",
        "single",
        "avoid-escape"
      ],
      "semi": [
        "error",
        "always"
      ],
      "@typescript-eslint/ban-ts-comment": [
        "warn",
        {
          "ts-ignore": "allow-with-description"
        }
      ],
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/explicit-member-accessibility": "off",
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/naming-convention": [
        "error",
        {
          "selector": "class",
          "format": [
            "PascalCase"
          ],
          "leadingUnderscore": "allow",
          "trailingUnderscore": "allow"
        },
        {
          "selector": "classProperty",
          "modifiers": [
            "static",
            "readonly"
          ],
          "format": [
            "camelCase",
            "UPPER_CASE"
          ],
          "leadingUnderscore": "allow",
          "trailingUnderscore": "allow"
        },
        {
          "selector": "interface",
          "format": [
            "PascalCase"
          ],
          "leadingUnderscore": "forbid",
          "trailingUnderscore": "forbid"
        },
        {
          "selector": "variable",
          "format": [
            "camelCase",
            "UPPER_CASE"
          ],
          "leadingUnderscore": "allow",
          "trailingUnderscore": "allow"
        },
        {
          "selector": "default",
          "format": [
            "camelCase"
          ],
          "leadingUnderscore": "allow",
          "trailingUnderscore": "allow"
        }
      ],
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-inferrable-types": "off",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "vars": "all",
          "args": "none"
        }
      ],
      "@typescript-eslint/no-use-before-define": "off",
      "@typescript-eslint/type-annotation-spacing": "error"
    }
  },
  "mocha": {
    "reporter": "dot",
    "require": [
      "@babel/register"
    ],
    "spec": [
      "test/**/*.spec.js"
    ]
  },
  "nyc": {
    "cwd": "test/",
    "exclude": [
      "**/*.spec.js",
      "built/vendor/**/*"
    ]
  }
}
