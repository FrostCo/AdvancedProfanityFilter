/* eslint-disable @typescript-eslint/naming-convention */
/* eslint-disable no-console */

/*
Setup:

1. Update `REPLACE_CONTENT` with desired values
2. Setup the git filter:
git config filter.safari.smudge "node bin/git-filters/safari.js --smudge"
git config filter.safari.clean "node bin/git-filters/safari.js --clean"
*/

const REPLACE_CONTENT = {
  // public: private
  'com.yourCompany': 'com.yourCompany',
  'DevTeamID': 'DevTeamID',
};

process.stdin.setEncoding('utf8');

function usage() {
  console.log(`usage:
      1. for git smudge
          node ${__filename} --smudge
      2. for git clean
          node ${__filename} --clean
  `);
}

function smudge() {
  process.stdin.on('readable', () => {
    let chunk = process.stdin.read();
    if (chunk !== null) {
      for (const key in REPLACE_CONTENT) {
        chunk = chunk.replaceAll(key, REPLACE_CONTENT[key]);
      }
      process.stdout.write(`${chunk}`);
    }
  });
}

function clean() {
  process.stdin.on('readable', () => {
    let chunk = process.stdin.read();
    if (chunk !== null) {
      for (const key in REPLACE_CONTENT) {
        chunk = chunk.replaceAll(REPLACE_CONTENT[key], key);
      }
      process.stdout.write(`${chunk}`);
    }
  });
}

function main() {
  try {
    if (process.argv.length >= 3) {
      switch (process.argv[2]) {
        case '--smudge':
          smudge();
          break;
        case '--clean':
          clean();
          break;
        default:
          usage();
      }
    } else {
      usage();
    }
  } catch (error) {
    console.log(error);
    usage();
  }
}

main();
